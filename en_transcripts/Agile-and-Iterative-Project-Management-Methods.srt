1
00:00:00,000 --> 00:00:03,810
Unknown: Today I bring you the
ajl and interactive project

2
00:00:03,810 --> 00:00:09,690
management methods as a topic.
First of all, I would like to

3
00:00:09,690 --> 00:00:14,160
say that I am not an expert on
these topics, but I do use some

4
00:00:14,160 --> 00:00:20,010
of the principles and some of
the ideas that this framework

5
00:00:20,040 --> 00:00:24,450
gives us. So what First of all,
what is actually a trial. So a

6
00:00:24,450 --> 00:00:27,810
trial is a kind of like a
combination of different

7
00:00:27,810 --> 00:00:31,410
techniques with and you might
see some of these keywords

8
00:00:31,410 --> 00:00:34,020
popping around if you google
these terms, you might see Scrum

9
00:00:34,020 --> 00:00:38,730
Kanban, waterfall, and so on.
And, and what these terms kind

10
00:00:38,730 --> 00:00:43,050
of convey are just different
strategies to organize and to

11
00:00:43,050 --> 00:00:51,360
plan a project. The, the Agile
principle, or the Agile kind of

12
00:00:51,780 --> 00:00:57,180
framework also has a manifesto.
And you can find this manifesto

13
00:00:57,210 --> 00:01:02,280
on the Agile manifesto.org
website. And the name itself.

14
00:01:02,310 --> 00:01:07,380
And the process is mostly
focused on delivering content as

15
00:01:07,380 --> 00:01:13,530
quickly as possible to minimize
like bureaucratic steps or

16
00:01:14,490 --> 00:01:17,880
things that are not directly
directly going to produce an

17
00:01:17,880 --> 00:01:23,400
output. And so for instance, the
the emphasis on prototyping and

18
00:01:23,400 --> 00:01:27,810
working solutions rather than
documentation. or, or, for

19
00:01:27,810 --> 00:01:31,470
instance, actually interacting
between people as opposed to

20
00:01:31,470 --> 00:01:35,670
just establishing bureaucratic
processes. And the name itself a

21
00:01:35,670 --> 00:01:42,630
jail is, is in part as a as a
need to respond to change. And

22
00:01:42,630 --> 00:01:46,080
this is something that you will
see often in the business world.

23
00:01:46,980 --> 00:01:50,070
And I'll explain how this kind
of plays in in the next slide.

24
00:01:50,070 --> 00:01:54,270
So if you're if you're familiar
with the the more traditional

25
00:01:55,080 --> 00:01:59,880
way of planning a project, you
have often requirements set up

26
00:01:59,880 --> 00:02:03,630
from from from early stage, then
you have a phase where it just

27
00:02:03,630 --> 00:02:07,860
design and you kind of try to
plan and to think of all the

28
00:02:07,860 --> 00:02:10,830
possible situations where things
can go wrong, or you want to

29
00:02:10,950 --> 00:02:13,980
make sure that you cover all the
cases. And eventually you get to

30
00:02:13,980 --> 00:02:18,510
a step where you actually
implement the plan, you put the

31
00:02:18,510 --> 00:02:22,530
plan into action. And And
afterwards, you validate and you

32
00:02:22,710 --> 00:02:27,900
you kind of have a delivery in
the end. This approach means

33
00:02:27,900 --> 00:02:32,310
that the time that goes between
the start of the concept, all

34
00:02:32,310 --> 00:02:35,640
the way to the delivery of the
product is a very large period

35
00:02:35,640 --> 00:02:40,080
of time. And therefore, it's
considered a high risk kind of

36
00:02:40,080 --> 00:02:44,220
approach. Because you don't
really have anything until many

37
00:02:44,220 --> 00:02:47,220
months later or many years
later, depending what you're

38
00:02:47,220 --> 00:02:51,300
trying to build. To counter that
the HL approach is a little bit

39
00:02:51,300 --> 00:02:55,350
more dynamic. And the focus is
that you have these these kind

40
00:02:55,350 --> 00:03:00,180
of it narrative cycles, where
you focus on milestones you

41
00:03:00,180 --> 00:03:06,420
focus on achieving small goals,
small deliverables. And this

42
00:03:06,420 --> 00:03:09,690
will actually give you a better
notion of progress. And also a

43
00:03:09,690 --> 00:03:14,640
better notion of how, how your
how your, how you are succeeding

44
00:03:14,670 --> 00:03:18,090
in achieving those milestones.
So it gives you both the

45
00:03:18,090 --> 00:03:21,810
progress and something to show
and to and to, to kind of

46
00:03:22,050 --> 00:03:26,520
feedback on. And then from
there, you can also learn what

47
00:03:26,520 --> 00:03:29,580
worked, what didn't work. And
you can kind of go back to

48
00:03:29,580 --> 00:03:32,520
planning and readjust if
anything needs to be done. And

49
00:03:32,520 --> 00:03:35,400
so this is a kind of like a
cyclical process that goes back

50
00:03:35,400 --> 00:03:39,720
and forth. So this process, I
didn't specifically mentioned

51
00:03:39,720 --> 00:03:43,470
this, but this was a kind of a
framework that was designed for

52
00:03:43,470 --> 00:03:46,620
for software development,
primarily, although there's a

53
00:03:46,620 --> 00:03:52,500
lot of things that we can learn
and apply to other projects. And

54
00:03:53,250 --> 00:03:55,890
how do you actually take this to
your project? And how do you

55
00:03:55,890 --> 00:03:59,580
apply it. So you can think of it
as a little bit of a Matryoshka

56
00:03:59,580 --> 00:04:03,750
type situation where, in the
end, the biggest matter you ask

57
00:04:03,750 --> 00:04:06,690
is your final product, this is
what you want to deliver. But

58
00:04:06,690 --> 00:04:10,830
you're going to have to break
down all the tasks that you have

59
00:04:10,830 --> 00:04:14,310
to do you cannot just think of a
project and do it all at once

60
00:04:14,310 --> 00:04:19,530
you're going to have to identify
small steps that you can do. And

61
00:04:19,530 --> 00:04:22,500
the key aspect in the in the
agile approach is actually to

62
00:04:22,500 --> 00:04:27,270
break down these processes in
all these the like, this big

63
00:04:27,270 --> 00:04:31,290
project into milestones that
will be like the intermediate

64
00:04:31,290 --> 00:04:35,820
level materials can in this
case, and and then tasks or even

65
00:04:35,820 --> 00:04:39,120
sub tasks or issues in the in
the case of GitHub, for

66
00:04:39,120 --> 00:04:41,190
instance, where you have smaller

67
00:04:42,600 --> 00:04:47,850
steps that can go between one
and two hours or at most one day

68
00:04:47,910 --> 00:04:55,290
of working, working time. And,
and so how could this be made

69
00:04:55,290 --> 00:04:58,920
into practice so borrowing an
example that that you're set up

70
00:04:58,920 --> 00:05:02,490
from the From the inter mind
project, you can see this kind

71
00:05:02,490 --> 00:05:08,880
of visualization of the of
several different issues. Each

72
00:05:08,880 --> 00:05:11,910
column represents a different
version with an expected

73
00:05:11,910 --> 00:05:16,050
timeline and delivery date. And
then each of these little

74
00:05:16,050 --> 00:05:19,320
bubbles, or you can think of it
as post its as well, that's

75
00:05:19,320 --> 00:05:23,640
where the Kanban kind of concept
comes from, has a bunch of

76
00:05:23,640 --> 00:05:28,380
labels describing what they are,
it has a title, and you

77
00:05:28,380 --> 00:05:31,710
eventually can assign or you can
move things between the panels,

78
00:05:31,710 --> 00:05:34,740
and so on. And the idea is that
with this, you have a very

79
00:05:34,740 --> 00:05:39,180
visual overview of where you are
in the project, what needs to be

80
00:05:39,180 --> 00:05:42,930
done. And you can also
prioritize things by just moving

81
00:05:42,930 --> 00:05:45,540
them up and down in this kind of
visual list. And as soon as

82
00:05:45,540 --> 00:05:49,350
something is complete, then it
can be hidden from this view, or

83
00:05:49,350 --> 00:05:53,490
it can be moved elsewhere. So in
this case, this is, is focused

84
00:05:53,490 --> 00:05:57,270
on version, so each of the
columns is a version. But the

85
00:05:57,270 --> 00:06:01,650
more common approach is actually
to have kind of like stages of

86
00:06:01,860 --> 00:06:07,170
the progress. And here I'm
borrowing the, the project from

87
00:06:07,440 --> 00:06:12,750
my actually, so the awesome Open
Science Montreal project where

88
00:06:12,750 --> 00:06:16,620
they already started using this,
this approach. And you can see

89
00:06:16,620 --> 00:06:22,050
that the GitHub provides this
standard to do in progress and

90
00:06:22,050 --> 00:06:26,040
done and, and you can, you can
see how you can plan things and

91
00:06:26,040 --> 00:06:28,950
leave them on the to do and then
everything that is being worked

92
00:06:28,950 --> 00:06:33,810
on is in the in progress section
with assigned to different

93
00:06:33,810 --> 00:06:37,800
people and so on. And, and one
additional thing, so mentioning

94
00:06:37,800 --> 00:06:41,250
this, this breaking down of
tasks is that with GitHub, you

95
00:06:41,250 --> 00:06:45,210
can have not just issues, but
you can also have within an

96
00:06:45,210 --> 00:06:49,530
issue, you can have, like bullet
points that you can make into

97
00:06:49,530 --> 00:06:54,210
checkboxes. And these will be
recognized as a smaller steps

98
00:06:54,210 --> 00:06:58,980
within that issue that you can
then complete, and, and have as

99
00:06:58,980 --> 00:07:06,300
a initial progress for for the
task. And there's also a way to

100
00:07:06,300 --> 00:07:09,450
somehow automate this process, I
have to be honest, that I'm not

101
00:07:09,450 --> 00:07:13,560
super familiar with this. But if
you if you want, there is a way

102
00:07:13,560 --> 00:07:19,050
to simplify this process
further. And but so in general

103
00:07:19,050 --> 00:07:22,380
terms, what what what are these
issues or what what could you

104
00:07:22,380 --> 00:07:25,530
make into an issue. And so you
can think of For instance, if

105
00:07:25,530 --> 00:07:28,380
you wanted to make a website,
you could try to break it down

106
00:07:28,380 --> 00:07:31,980
into creating content for the
website, as well as Oops, sorry,

107
00:07:32,610 --> 00:07:38,580
as well as creating or finding a
domain to actually have as the

108
00:07:38,580 --> 00:07:41,250
address for your website. And
there, you would have to, for

109
00:07:41,250 --> 00:07:44,970
instance, decide what domain
that would be agreed between

110
00:07:44,970 --> 00:07:51,060
everyone eventually purchase
that domain, and set it up as as

111
00:07:51,060 --> 00:07:54,600
the redirect for the GitHub
account. And, and similarly, you

112
00:07:54,600 --> 00:07:58,650
would have to create the
content, and then the different

113
00:07:59,730 --> 00:08:03,300
parts of actually creating the
content, how you would go about

114
00:08:03,300 --> 00:08:06,210
it and different sections of
your website, and so on. And you

115
00:08:06,210 --> 00:08:08,940
can think of each of these
bullet points as an issue. And

116
00:08:08,940 --> 00:08:11,400
you could even think of these
inner ones as for instance,

117
00:08:11,400 --> 00:08:14,940
these checkboxes that I was
mentioning on on GitHub, for

118
00:08:14,940 --> 00:08:21,270
instance. And so there's also a
live demo that has been set up

119
00:08:21,540 --> 00:08:28,320
by by by the MLS team. Before I
will make sure to add that link

120
00:08:28,320 --> 00:08:33,000
to the to the hack MD and and
I'll add some additional

121
00:08:33,000 --> 00:08:35,460
resources as well if you want to
read a bit more on that.

